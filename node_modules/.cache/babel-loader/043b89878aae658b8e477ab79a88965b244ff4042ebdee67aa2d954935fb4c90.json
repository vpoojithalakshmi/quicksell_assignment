{"ast":null,"code":"// App.js\nimport React,{useState,useEffect}from'react';import DisplayOptions from'./components/DisplayOptions';import KanbanBoard from'./components/KanbanBoard';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[tickets,setTickets]=useState([]);const[groupOption,setGroupOption]=useState('status');const[sortOption,setSortOption]=useState('priority');useEffect(()=>{const fetchData=async()=>{try{const response=await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');if(!response.ok){throw new Error('Failed to fetch data');}const data=await response.json();// Assuming the API response has a 'tickets' property containing an array of tickets\nsetTickets(data.tickets||[]);}catch(error){console.error('Error fetching data:',error.message);// Handle the error (e.g., show an error message to the user)\n}};fetchData();},[]);const handleGroupChange=e=>{setGroupOption(e.target.value);};const handleSortChange=e=>{setSortOption(e.target.value);};// Implement logic to group and sort tickets based on 'groupOption' and 'sortOption'\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Kanban Board\"}),/*#__PURE__*/_jsx(DisplayOptions,{onGroupChange:handleGroupChange,onSortChange:handleSortChange}),/*#__PURE__*/_jsx(KanbanBoard,{tickets:tickets,groupOption:groupOption,sortOption:sortOption})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","DisplayOptions","KanbanBoard","jsx","_jsx","jsxs","_jsxs","App","tickets","setTickets","groupOption","setGroupOption","sortOption","setSortOption","fetchData","response","fetch","ok","Error","data","json","error","console","message","handleGroupChange","e","target","value","handleSortChange","className","children","onGroupChange","onSortChange"],"sources":["C:/Users/hp/Downloads/poojitha/poojitha/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport DisplayOptions from './components/DisplayOptions';\nimport KanbanBoard from './components/KanbanBoard';\n\nconst App = () => {\n  const [tickets, setTickets] = useState([]);\n  const [groupOption, setGroupOption] = useState('status');\n  const [sortOption, setSortOption] = useState('priority');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const data = await response.json();\n        // Assuming the API response has a 'tickets' property containing an array of tickets\n        setTickets(data.tickets || []);\n      } catch (error) {\n        console.error('Error fetching data:', error.message);\n        // Handle the error (e.g., show an error message to the user)\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleGroupChange = (e) => {\n    setGroupOption(e.target.value);\n  };\n\n  const handleSortChange = (e) => {\n    setSortOption(e.target.value);\n  };\n\n  // Implement logic to group and sort tickets based on 'groupOption' and 'sortOption'\n\n  return (\n    <div className=\"app\">\n      <h1>Kanban Board</h1>\n      <DisplayOptions onGroupChange={handleGroupChange} onSortChange={handleSortChange} />\n      <KanbanBoard tickets={tickets} groupOption={groupOption} sortOption={sortOption} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,cAAc,KAAM,6BAA6B,CACxD,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACW,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAC,QAAQ,CAAC,CACxD,KAAM,CAACa,UAAU,CAAEC,aAAa,CAAC,CAAGd,QAAQ,CAAC,UAAU,CAAC,CAExDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAc,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,0DAA0D,CAAC,CACxF,GAAI,CAACD,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,sBAAsB,CAAC,CACzC,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClC;AACAX,UAAU,CAACU,IAAI,CAACX,OAAO,EAAI,EAAE,CAAC,CAChC,CAAE,MAAOa,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAACE,OAAO,CAAC,CACpD;AACF,CACF,CAAC,CAEDT,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAU,iBAAiB,CAAIC,CAAC,EAAK,CAC/Bd,cAAc,CAACc,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAChC,CAAC,CAED,KAAM,CAAAC,gBAAgB,CAAIH,CAAC,EAAK,CAC9BZ,aAAa,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC/B,CAAC,CAED;AAEA,mBACErB,KAAA,QAAKuB,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClB1B,IAAA,OAAA0B,QAAA,CAAI,cAAY,CAAI,CAAC,cACrB1B,IAAA,CAACH,cAAc,EAAC8B,aAAa,CAAEP,iBAAkB,CAACQ,YAAY,CAAEJ,gBAAiB,CAAE,CAAC,cACpFxB,IAAA,CAACF,WAAW,EAACM,OAAO,CAAEA,OAAQ,CAACE,WAAW,CAAEA,WAAY,CAACE,UAAU,CAAEA,UAAW,CAAE,CAAC,EAChF,CAAC,CAEV,CAAC,CAED,cAAe,CAAAL,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React from'react';import TicketCard from'./TicketCard';import'./KanbanBoard.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const KanbanBoard=_ref=>{let{tickets,groupOption,sortOption}=_ref;// Group and sort the tickets based on user selection\nconst groupedAndSortedTickets=groupAndSortTickets(tickets,groupOption,sortOption);return/*#__PURE__*/_jsx(\"div\",{className:\"kanban-board\",children:groupedAndSortedTickets.map(column=>/*#__PURE__*/_jsxs(\"div\",{className:\"kanban-column\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"column-heading\",children:[getHeadingText(column.groupName),' ',/*#__PURE__*/_jsx(\"span\",{className:\"group-count\",children:column.tickets.length})]}),column.tickets.map(ticket=>/*#__PURE__*/_jsx(TicketCard,{ticket:ticket},ticket.id))]},column.groupName))});};// Function to group and sort tickets based on user selection\nconst groupAndSortTickets=(tickets,groupOption,sortOption)=>{let groupedTickets=[];// Group tickets based on the selected option\nswitch(groupOption){case'status':groupedTickets=groupByStatus(tickets);break;case'user':groupedTickets=groupByUser(tickets);break;case'priority':groupedTickets=groupByPriority(tickets);break;default:// Default to grouping by status if no valid option is selected\ngroupedTickets=groupByStatus(tickets);}// Sort tickets within each group based on the selected option\ngroupedTickets.forEach(group=>{group.tickets.sort((a,b)=>{if(sortOption==='priority'){return b.priority-a.priority;}else if(sortOption==='title'){return a.title.localeCompare(b.title);}return 0;});});return groupedTickets;};// Function to group tickets by status\nconst groupByStatus=tickets=>{const grouped={};tickets.forEach(ticket=>{if(!grouped[ticket.status]){grouped[ticket.status]={groupName:ticket.status,tickets:[]};}grouped[ticket.status].tickets.push(ticket);});return Object.values(grouped);};// Function to group tickets by user\nconst groupByUser=tickets=>{const grouped={};tickets.forEach(ticket=>{if(!grouped[ticket.userId]){grouped[ticket.userId]={groupName:ticket.userId,tickets:[]};}grouped[ticket.userId].tickets.push(ticket);});return Object.values(grouped);};// Function to group tickets by priority\nconst groupByPriority=tickets=>{const grouped={};tickets.forEach(ticket=>{const priorityGroup=\"Priority \".concat(ticket.priority);if(!grouped[priorityGroup]){grouped[priorityGroup]={groupName:priorityGroup,tickets:[]};}grouped[priorityGroup].tickets.push(ticket);});return Object.values(grouped);};// Function to get heading text based on mapped values\nconst getHeadingText=groupName=>{const priorityMap={'Priority 4':'Urgent 4','Priority 3':'High 3','Priority 2':'Medium 2','Priority 1':'Low 1','Priority 0':'No priority'};return priorityMap[groupName]||groupName;};export default KanbanBoard;","map":{"version":3,"names":["React","TicketCard","jsx","_jsx","jsxs","_jsxs","KanbanBoard","_ref","tickets","groupOption","sortOption","groupedAndSortedTickets","groupAndSortTickets","className","children","map","column","getHeadingText","groupName","length","ticket","id","groupedTickets","groupByStatus","groupByUser","groupByPriority","forEach","group","sort","a","b","priority","title","localeCompare","grouped","status","push","Object","values","userId","priorityGroup","concat","priorityMap"],"sources":["C:/Users/hp/Downloads/poojitha/poojitha/src/components/KanbanBoard.js"],"sourcesContent":["import React from 'react';\r\nimport TicketCard from './TicketCard';\r\nimport './KanbanBoard.css';\r\n\r\nconst KanbanBoard = ({ tickets, groupOption, sortOption }) => {\r\n  // Group and sort the tickets based on user selection\r\n  const groupedAndSortedTickets = groupAndSortTickets(tickets, groupOption, sortOption);\r\n\r\n  return (\r\n    <div className=\"kanban-board\">\r\n      {/* Render columns based on grouped and sorted tickets */}\r\n      {groupedAndSortedTickets.map((column) => (\r\n        <div key={column.groupName} className=\"kanban-column\">\r\n          <h2 className=\"column-heading\">\r\n            {getHeadingText(column.groupName)}{' '}\r\n            <span className=\"group-count\">{column.tickets.length}</span>\r\n          </h2>\r\n          {/* Render TicketCards in the column */}\r\n          {column.tickets.map((ticket) => (\r\n            <TicketCard key={ticket.id} ticket={ticket} />\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Function to group and sort tickets based on user selection\r\nconst groupAndSortTickets = (tickets, groupOption, sortOption) => {\r\n  let groupedTickets = [];\r\n\r\n  // Group tickets based on the selected option\r\n  switch (groupOption) {\r\n    case 'status':\r\n      groupedTickets = groupByStatus(tickets);\r\n      break;\r\n    case 'user':\r\n      groupedTickets = groupByUser(tickets);\r\n      break;\r\n    case 'priority':\r\n      groupedTickets = groupByPriority(tickets);\r\n      break;\r\n    default:\r\n      // Default to grouping by status if no valid option is selected\r\n      groupedTickets = groupByStatus(tickets);\r\n  }\r\n\r\n  // Sort tickets within each group based on the selected option\r\n  groupedTickets.forEach((group) => {\r\n    group.tickets.sort((a, b) => {\r\n      if (sortOption === 'priority') {\r\n        return b.priority - a.priority;\r\n      } else if (sortOption === 'title') {\r\n        return a.title.localeCompare(b.title);\r\n      }\r\n      return 0;\r\n    });\r\n  });\r\n\r\n  return groupedTickets;\r\n};\r\n\r\n// Function to group tickets by status\r\nconst groupByStatus = (tickets) => {\r\n  const grouped = {};\r\n  tickets.forEach((ticket) => {\r\n    if (!grouped[ticket.status]) {\r\n      grouped[ticket.status] = { groupName: ticket.status, tickets: [] };\r\n    }\r\n    grouped[ticket.status].tickets.push(ticket);\r\n  });\r\n  return Object.values(grouped);\r\n};\r\n\r\n// Function to group tickets by user\r\nconst groupByUser = (tickets) => {\r\n  const grouped = {};\r\n  tickets.forEach((ticket) => {\r\n    if (!grouped[ticket.userId]) {\r\n      grouped[ticket.userId] = { groupName: ticket.userId, tickets: [] };\r\n    }\r\n    grouped[ticket.userId].tickets.push(ticket);\r\n  });\r\n  return Object.values(grouped);\r\n};\r\n\r\n// Function to group tickets by priority\r\nconst groupByPriority = (tickets) => {\r\n  const grouped = {};\r\n  tickets.forEach((ticket) => {\r\n    const priorityGroup = `Priority ${ticket.priority}`;\r\n    if (!grouped[priorityGroup]) {\r\n      grouped[priorityGroup] = { groupName: priorityGroup, tickets: [] };\r\n    }\r\n    grouped[priorityGroup].tickets.push(ticket);\r\n  });\r\n  return Object.values(grouped);\r\n};\r\n\r\n// Function to get heading text based on mapped values\r\nconst getHeadingText = (groupName) => {\r\n  const priorityMap = {\r\n    'Priority 4': 'Urgent 4',\r\n    'Priority 3': 'High 3',\r\n    'Priority 2': 'Medium 2',\r\n    'Priority 1': 'Low 1',\r\n    'Priority 0': 'No priority',\r\n  };\r\n\r\n  return priorityMap[groupName] || groupName;\r\n};\r\n\r\nexport default KanbanBoard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\poojitha\\\\poojitha\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport DisplayOptions from './components/DisplayOptions';\nimport KanbanBoard from './components/KanbanBoard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tickets, setTickets] = useState([]);\n  const [groupOption, setGroupOption] = useState('status');\n  const [sortOption, setSortOption] = useState('priority');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const data = await response.json();\n        // Assuming the API response has a 'tickets' property containing an array of tickets\n        setTickets(data.tickets || []);\n      } catch (error) {\n        console.error('Error fetching data:', error.message);\n        // Handle the error (e.g., show an error message to the user)\n      }\n    };\n\n    fetchData();\n  }, []);\n  const handleGroupChange = e => {\n    setGroupOption(e.target.value);\n  };\n  const handleSortChange = e => {\n    setSortOption(e.target.value);\n  };\n\n  // Implement logic to group and sort tickets based on 'groupOption' and 'sortOption'\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Kanban Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayOptions, {\n      onGroupChange: handleGroupChange,\n      onSortChange: handleSortChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KanbanBoard, {\n      tickets: tickets,\n      groupOption: groupOption,\n      sortOption: sortOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"J1P8KGC7/tLeg2O+lKbo/mYwj10=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","DisplayOptions","KanbanBoard","jsxDEV","_jsxDEV","App","_s","tickets","setTickets","groupOption","setGroupOption","sortOption","setSortOption","fetchData","response","fetch","ok","Error","data","json","error","console","message","handleGroupChange","e","target","value","handleSortChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onGroupChange","onSortChange","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/poojitha/poojitha/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport DisplayOptions from './components/DisplayOptions';\nimport KanbanBoard from './components/KanbanBoard';\n\nconst App = () => {\n  const [tickets, setTickets] = useState([]);\n  const [groupOption, setGroupOption] = useState('status');\n  const [sortOption, setSortOption] = useState('priority');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const data = await response.json();\n        // Assuming the API response has a 'tickets' property containing an array of tickets\n        setTickets(data.tickets || []);\n      } catch (error) {\n        console.error('Error fetching data:', error.message);\n        // Handle the error (e.g., show an error message to the user)\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleGroupChange = (e) => {\n    setGroupOption(e.target.value);\n  };\n\n  const handleSortChange = (e) => {\n    setSortOption(e.target.value);\n  };\n\n  // Implement logic to group and sort tickets based on 'groupOption' and 'sortOption'\n\n  return (\n    <div className=\"app\">\n      <h1>Kanban Board</h1>\n      <DisplayOptions onGroupChange={handleGroupChange} onSortChange={handleSortChange} />\n      <KanbanBoard tickets={tickets} groupOption={groupOption} sortOption={sortOption} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,QAAQ,CAAC;EACxD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,UAAU,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0DAA0D,CAAC;QACxF,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QACzC;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC;QACAX,UAAU,CAACU,IAAI,CAACX,OAAO,IAAI,EAAE,CAAC;MAChC,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACE,OAAO,CAAC;QACpD;MACF;IACF,CAAC;;IAEDT,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,iBAAiB,GAAIC,CAAC,IAAK;IAC/Bd,cAAc,CAACc,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,gBAAgB,GAAIH,CAAC,IAAK;IAC9BZ,aAAa,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;;EAED;;EAEA,oBACEtB,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBzB,OAAA;MAAAyB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB7B,OAAA,CAACH,cAAc;MAACiC,aAAa,EAAEX,iBAAkB;MAACY,YAAY,EAAER;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpF7B,OAAA,CAACF,WAAW;MAACK,OAAO,EAAEA,OAAQ;MAACE,WAAW,EAAEA,WAAY;MAACE,UAAU,EAAEA;IAAW;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChF,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAzCID,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AA2CT,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}